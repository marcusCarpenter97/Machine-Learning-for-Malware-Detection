
from dataset import Dataset
from sklearn import tree
from sklearn.metrics import confusion_matrix
import graphviz

# Prepare data
data = Dataset()
data.load_data()

training_data, testing_data, training_labels, testing_labels = data.partition_data(0.33)

# Classify
classifier = tree.DecisionTreeClassifier()
decision_tree = classifier.fit(training_data, training_labels)

predicted_labels = classifier.predict(testing_data)
accuracy = classifier.score(testing_data, testing_labels)

# Create pdf of decision tree
dot_data = tree.export_graphviz(decision_tree, out_file=None,
                                feature_names=data.feature_names,
                                class_names=data.label_names,
                                filled=True, rounded=True,
                                special_characters=True)

graph = graphviz.Source(dot_data)
path = graph.render(filename="treeTest", directory="/home/marcus/PycharmProjects/Final_Project/")

print(f"Accuracy: {accuracy}")

# Calculate confusion matrix
conf_matrix = confusion_matrix(testing_labels, predicted_labels)
print(f"Confusion Matrix\n        Benign | Malware\nBenign  {conf_matrix[0][0]}    | {conf_matrix[0][1]}\n"
      f"Malware {conf_matrix[1][0]}      | {conf_matrix[1][1]}")
