"""
from seqlearn.datasets import load_conll
from seqlearn.perceptron import StructuredPerceptron
from seqlearn.evaluation import bio_f_score


def features(sequence, i):
    yield "word=" + sequence[i].lower()
    if sequence[i].isupper():
        yield "Uppercase"


X_train, y_train, lengths_train = load_conll("train.txt", features)

clf = StructuredPerceptron()
clf.fit(X_train, y_train, lengths_train)

X_test, y_test, lengths_test = load_conll("validation.txt", features)
y_pred = clf.predict(X_test, lengths_test)
print(bio_f_score(y_test, y_pred))
"""
"""
from dataset import Dataset
from seqlearn.hmm import MultinomialHMM

hmm = MultinomialHMM()

data = Dataset()

malware_rate = 0.33
data.load_data(malware_rate)
"""
"""
names = ["Benign", "Malware"]
items = ["True", "False", "True", "False", "False"]
items_with_names = []

for i in items:
    items_with_names.append(names[i == "True"])

print(items_with_names)
"""
"""
arr = [[1,1],[2,2],[3,3]]
with open("/home/marcus/PycharmProjects/Final_Project/test.csv", "a") as test_csv:
    test_csv.write(f"{','.join([str(item) for row in arr for item in row])}\n")

string = ""
string = f"{','.join([str(item) for row in arr for item in row])}\n"
print(string)
print("test")
"""
