
import os
import re


class MistFeatureExtractor(object):

    def __init__(self):
        self.mist_data_directory = "MIST reports"
        self.csv_data_destination = "extracted_mist_data.csv"

    def extract_features(self):
        """
        BigO(n * m) where n = number of files and m = line count per file
        Throws IOError exception if MIST report can be open
        :return: None
        """

        mist_data = []

        mist_files = os.listdir(self.mist_data_directory)

        mist_files_len = len(mist_files)

        progress_counter = 0

        for file_name in mist_files:

            progress_counter += 1

            print(f"Current file: {file_name} Current progress: {progress_counter}/{mist_files_len}   "
                  f"{(progress_counter/mist_files_len)*100}%")

            mist_report = []

            # Get file type from file name to label report
            file_type = re.match(r'malware|benign', file_name).group()

            file_path = os.path.join(self.mist_data_directory, file_name)

            try:
                with open(file_path, 'r') as report:

                    for line in report:
                        # Match line with regular expression.
                        new_mist_code = re.match(r'\d\d \d\d', line)

                        # If regex finds a match then create new report
                        if new_mist_code:
                            mist_report.append(new_mist_code.group())

                    mist_report.append(file_type)
                    mist_data.append(mist_report)

            except IOError:
                print("IOError: Cannot open MIST file.")

        with open(self.csv_data_destination, "a") as mist_csv:
            for row in mist_data:
                mist_csv.write(f"{','.join([str(mist_code) for mist_code in row])}\n")
